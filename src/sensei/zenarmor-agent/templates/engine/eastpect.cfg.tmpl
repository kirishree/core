# DO NOT EDIT THIS FILE -- this is an auto-generated file

[General]
rootDir =/usr/local/sensei/
workersMap = etc/workers.map
csvDelimiter = ,
coreFileEnable = {{.General.IsCoreFileEnabled}}
develFeaturesEnable = false
memDiskSize = auto
flavor = {{.General.DeploymentSize}}
shun_vlans = {{.General.ShunVLANs}}
shun_networks = {{.General.ShunNetworks}}
bypassEnable = {{.General.IsBypassEnabled}}
bypassModeOn = {{.General.IsBypassModeOn}}
TempSize = 290

[Enrich]
usernameEnrich = {{.Enrich.IsUsernamesEnabled}}
dnsEnrich = {{.Enrich.IsDNSEnabled}}
dnsEnrichTTL = 3600
dnsEnrichInFlight = {{.Enrich.IsDNSInFlightEnabled}}
dnsEnrichmentServers = {{.Enrich.DNSEnrichmentServers}}
geoIPEnrich = true
geoIPDirectory = db/GeoIP/
countryEnrich = true
cityEnrich = true
regionEnrich = true
postalCodeEnrich = false
coordinatesEnrich = true
areaCodeEnrich = false
metroCodeEnrich = false
asnEnrich = true
webCategoryDirectory = db/Webcat/
userWebCategoryDirectory = userdefined/db/Webcat/
userAgentEnrich = false
userAgentDirectory = db/UA/
cloudWebcatEnrich = {{.Enrich.WebCatEnrich}}
cloudNoQueryDomains = {{.Enrich.NoQueryDomains}}
cloudResponseTimeout = {{.Enrich.CloudResponseTimeout}}
tcpServiceEnable = true
tcpServiceAddress = run/mgmt.sock

[Classify]
enable = true
parserEnable = true
httpParserEnable = true
;Number of packets to try to classify
maxTries = 10
databaseDirectory = DynamicClassifier/

[Output]
enabled = false
streamEnabled = true
; logInterval time must be one of these options:
; 1m = 1 minute
; 5m = 5 minutes
; 10m = 10 minutes
; 1h = 1 hour
; 1d = 1 day
; 1w = 1 week
; 1M = 1 month
logInterval = 1d
format = JSON
; Number of protocol informations to buffer in memory if TCP connection is ever lost
ipdrSaveBufferSize = 2000

; timeout value to flush ipdr records
ipdrFlushTimeout = 00:01:00

[Logger]
archiveDir = log/archive
autoFlush = true
; appRotation time must be one of these options:
; 1m = 1 minute
; 5m = 5 minutes
; 10m = 10 minutes
; 1h = 1 hour
; 1d = 1 day
; 1w = 1 week
; 1M = 1 month
appRotationTime = 1d

; possible values CRITICAL, ERROR, WARNING, DEBUG, DEBUG1, DEBUG2, DEBUG3, DEBUG4, DEBUG5
severityLevel = {{.Logger.EngineSeverityLevel}}

[IP]
; Disable IP Checksum Control
disableChecksum = true

[Tcp]
; Connections deemed stale
staleTimeout = 600

; Syn Filter Context Table Size
maxSynfContext = 10000

; How many stale timeouts needed to close the conn
staleCount = 2

; Conn establishment timeout
handshakeTimeout = 5

; In milisecs. How much time we await a missing piece
reassTimeout = 100

; reassembly queue maximum length
reassMaxQueueLength = 100

; Enable TCP L2
enableL2 = false

; Disable TCP Checksum Control
disableChecksum = true

[Udp]
idleTimeout = 120

; Disable UDP Checksum Control
disableChecksum = true

[Http]


[Dns]
; Enable / Disable Active DNS
enableActiveDNS = false

; DNS Connection Idle Timeout
idleTimeout = 10

; Average Response Time treshhold
; in seconds
averageResponseTime = 2

; Average Success Rate treshhold
; requests / response rate
averageSuccessRate = 0.70
; Re-check initial timeout
recheckTimeout = 100


[TLS]
enabled = false
defaultInspect = false
caKeyFile = internal_ca.key
caCertFile = internal_ca.pem

; whether to use Diffie Hellman or not
useDH = true

; Diffie Hellman directory
dhDir = /dh

; use random generated Diffie Hellman parameters
; if dh directory contains multiple Diffie Hellman pem formatted files random selection will be used if this option is enabled
; otherwise first dh file will be used!
useRandomDH = true


systemCertChainLocation = auto
;systemCertChainLocation = /usr/local/share/certs/ca-root-nss.crt
;systemCertChainLocation = /etc/ssl/certs

; client connection policy if TLS verification fails
; possible values are: DROP, IGNORE, REFLECT
; (case insensitive)
policy = REFLECT
;ciphers = HIGH:!MEDIUM:!LOW:!aNULL:!eNULL:!SHA1:!EXPORT:!MD5:!RC4
ciphers = "ALL:!aNULL:!eNULL"

[Database]
type = {{.ReportingDatabase.DatabaseTypeStr}}
remote = {{.ReportingDatabase.IsRemote}}
retireAfter = {{.ReportingDatabase.RetireTableAfter}}
dbpath = {{.ReportingDatabase.DatabasePath}}


[Netflow]
enabled = false
version = 9
collectorIP = 127.0.0.1
collectorPort = 9996

[ElasticSearch]
enabled = true
connIndex = conn
httpIndex = http
dnsIndex = dns
tlsIndex = tls
sipIndex = sip
alertIndex = alert
apiEndPointIP = {{.ES.ApiEndpointAddress}}
apiEndPointPort =  {{.ES.ApiEndpointPort}}
apiEndPointVersion = {{.ES.ApiEndpointVersion}}
apiEndPointPrefix = {{.ES.ApiEndpointPrefix}}
apiEndPointUser = {{.ES.ApiEndpointUser}}
apiEndPointPass = {{.ES.ApiEndpointPass}}
; set bulkBufferSize 0 to disable bulk writes
bulkBufferSize = 100

[Service]
;Background Daemon?
daemonEnable = false
refreshInterval = 0

[Rules]
enabled = true
rulesDirectory = db/policy/Rules
userRulesDirectory = userdefined/policy/Rules

[Updater]
signatureUpdatesEnabled = {{.Updater.SignatureUpdatesEnabled}}
softwareUpdatesEnabled = {{.Updater.SoftwareUpdatesEnabled}}

[Watchdog]
enabled = {{.General.IsWatchdogEnabled}}
timeout = 20
hardwareBypassEnable = {{.General.IsHardwareBypassEnabled}}
hardwareBypassTimeout = 5
# number of icmp packets to be watched
numICMP = 100
# number of seconds to receive all numICMP packets
icmpWindow = 1

[StreamReport]
enabled = {{.Syslog.Enable}}
# syslog server ip or hostname
server = {{.Syslog.Host}}
# syslog port default 514
port = {{.Syslog.Port}}
# protocol UDP or TCP
protocol = {{.Syslog.Protocol}}
# indexes for sending
indexes = {{.Syslog.Indexes}}

[StreamReportExternal]
enabled = {{.ExternalES.Enable}}
# External elastic search server ip or hostname
uri = {{.ExternalES.Uri}}
uriUser = {{.ExternalES.User}}
uriPass = {{.ExternalES.Pass}}
version = {{.ExternalES.Version}}

[Anonymize]
localAddress = {{.General.IsLocalAddressesAnonymized}}
remoteAddress = {{.General.IsRemoteAddressesAnonymized}}

[senpai]
admin-email = {{.CloudAgent.AdminEmail}}
nab-base-address = https://nab.sunnyvalley.cloud
node-register-address = https://sunnyvalley.cloud
token-file-path = etc/token
core-enabled = {{.CloudAgent.IsCoreGenerationEnabled}}
centralManagement= {{.CloudAgent.CentralManagement}}
reportInfrastructureErrors= {{.CloudAgent.ReportInfrastructureErrors}}

[restapi]
port = 8090
enabled = {{.RestApi.Enable}}
key-file = restapikey.pem
cert-file = restapicert.pem

[Health]
health-check = {{.Health.HealthCheck}}
health-share = {{.Health.HealthShare}}
health-timer = {{.Health.HealthTimer}}
